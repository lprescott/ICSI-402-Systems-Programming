void verifyArchive(char ** fileNames, int numFiles, char * archiveName) {
	
		//Variables here
	char * tempArchiveName;
	int numOfFiles, fileNameLength;
	long contentSize = 0, totalSize = 0;
	tempArchiveName = strdup(archiveName);
	FILE * inputFile, * tempFile;
	int fileDetectedCount = 0;
	long sumOfBytes = 0;
	
	// concatenate ".bin" to a temp archiveName string.
	if (strstr(tempArchiveName, ".bin") == NULL){
		strcat(tempArchiveName, ".bin");
	}

	//opens a new bin file with new string for reading
	if ((inputFile = fopen(tempArchiveName, "rb")) == NULL){
		fprintf(stderr, "Could not allocate space for the input archive.");
		exit(-1);
	}
	//makes totalSize equal to fileSize that takes a parameter named inputFile
	totalSize = fileSize(inputFile);
        //prints the total size of the entire archive
	printf("\nTotal Size of %s (in bytes): %d\n", tempArchiveName, totalSize);
        //reads number of files from the .bin file
	fread(&numOfFiles, sizeNumFiles, 1, inputFile);

	printf("\nNumber of Files: %d\n", numOfFiles);
	//for loop, that loops through the file.
	
	sumOfBytes += 4;
	
	int i = 0;
	for (i = 0; i < numOfFiles; i++) {
		fread(&fileNameLength, sizeof(int), 1, inputFile);
		//printf("%d\n", fileNameLength);
		//dynamic memory allocation for the name of the file
		char * tempString = malloc(fileNameLength * sizeof(char));
		//checks if you can't allocate, then terminates
		if (tempString == NULL) {
			exit(-1);
		}
	
		//reads the file name into tempString
		fread(tempString, sizeof(char), fileNameLength, inputFile);
		
		if ((tempFile = fopen(tempString, "r")) == NULL) {
			printf("TempFile is not opening");
			exit(-1);
		}
		
		//reads the content size from the .bin file.
		fread(&contentSize, sizeof(long), 1, inputFile);
		// prints the filename and the size
		
		printf("%d\n", (contentSize));
		
		int dif = contentSize - fileSize(tempFile);
		
		if (dif != 0) {
			printf("Missing %d number of bytes\n", dif);
			exit(-1);
		}
		
		sumOfBytes += fileSize(tempFile) + sizeof(int) + sizeof(long) + fileNameLength;
		
		//seeks to the next file
		fseek(inputFile, contentSize, SEEK_CUR);

		//free
		free(tempString);
		
	}
	
	printf("SumOfBytes %d\n", sumOfBytes);
	
	long diffrence = totalSize - sumOfBytes;

	printf("%d\n", diffrence);
	
	if (diffrence != 0) {
		printf("Missing %d bytes\n");
	}
}
